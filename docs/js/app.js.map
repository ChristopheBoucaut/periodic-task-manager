{"version":3,"sources":["app/scripts/app.js","app/scripts/controllers.js","app/scripts/controllers/create.js","app/scripts/controllers/head.js","app/scripts/controllers/header.js","app/scripts/controllers/history.js","app/scripts/controllers/homepage.js","app/scripts/entity/task.js","app/scripts/entity/taskHistory.js","app/scripts/services.js","app/scripts/services/headContent.js","app/scripts/services/headerContent.js","app/scripts/services/storage.js","app/scripts/services/taskManager.js"],"names":["nameModule","mainModule","angular","module","config","$routeProvider","when","controller","templateUrl","otherwise","redirectTo","$translateProvider","useStaticFilesLoader","prefix","suffix","determinePreferredLanguage","useSanitizeValueStrategy","listLang","Array","currentLang","navigator","language","substr","indexOf","$mdThemingProvider","theme","primaryPalette","accentPalette","warnPalette","dark","$mdIconProvider","defaultPathIcons","icon","$mdDateLocaleProvider","formatDate","date","Date","toLocaleDateString","storageProvider","addEntity","name","db","objectStore","createObjectStore","keyPath","autoIncrement","run","serviceWorker","register","then","console","log","controllersModule","Create","$scope","$routeParams","$translate","$mdToast","headContent","headerContent","taskManager","removeMainAction","saveTask","taskForm","$valid","task","nextDate","setDate","getDate","periodicity","save","idTask","content","toast","simple","textContent","position","show","window","history","back","id","title","setAdditionnalTitle","getById","tomorrow","minDate","$inject","head","additionnalTitle","$on","EVENT_CHANGE_TITLE","event","Header","$location","$mdSidenav","mainAction","isHome","EVENT_CHANGE_MAIN_ACTION","openLeftMenu","toggle","backHome","path","Homepage","loadingTasksHistory","errorLoadingTasksHistory","tasksHistory","getAllHistory","loadingTasks","errorLoadingTasks","$mdDialog","that","tasks","resetTitle","setMainAction","getAll","today","i","length","daysBeforeNextTime","determineDaysBeforeNextTime","check","validTask","addHistory","report","delete","$index","texts","confirm","ok","cancel","splice","Math","ceil","Task","TaskHistory","servicesModule","service","provider","notifyChangeMethod","Symbol","HeadContent","$rootScope","$broadcast","notifyChangeMainActionMethod","HeaderContent","callback","connexionSymbol","entitiesSymbol","Storage","$q","entities","entity","mode","deferred","defer","getConnexion","connexion","stockageName","getStockageNameFromEntity","transaction","onerror","error","reject","resolve","promise","indexedDB","open","target","errorCode","onsuccess","result","onupgradeneeded","initDb","toLowerCase","StorageProvider","$get","push","TaskManager","storage","taskStore","getObjectStore","putRequest","put","parseInt","getRequest","get","openCursor","cursor","value","continue","deleteRequest","taskHistory","taskHistoryStore","addRequest","add"],"mappings":"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","file":"docs/js/app.js","sourcesContent":["import controllersModule from 'scripts/controllers';\nimport servicesModule from 'scripts/services';\nimport Task from 'scripts/entity/task';\nimport TaskHistory from 'scripts/entity/taskHistory';\n\nvar nameModule = 'periodicTaskManager';\n\nvar mainModule = angular.module(nameModule, [\n    controllersModule,\n    servicesModule,\n    'ngMessages',\n    'ngRoute',\n    'ngMaterial',\n    'pascalprecht.translate',\n]);\n\n// Config router.\nmainModule.config([\n    '$routeProvider',\n    function ($routeProvider) {\n        $routeProvider\n            .when(\n                '/',\n                {\n                    controller: 'HomepageController',\n                    templateUrl: 'homepage.html'\n                }\n            )\n            .when(\n                '/create/:id?',\n                {\n                    controller: 'CreateController',\n                    templateUrl: 'create.html'\n                }\n            )\n            .when(\n                '/history',\n                {\n                    controller: 'HistoryController',\n                    templateUrl: 'history.html'\n                }\n            )\n            .otherwise({ redirectTo: '/' });\n    }\n]);\n\n// config translate module.\nmainModule.config([\n    '$translateProvider',\n    function($translateProvider) {\n        $translateProvider.useStaticFilesLoader({\n            prefix: 'translation.',\n            suffix: '.json'\n        });\n\n        $translateProvider.determinePreferredLanguage(determinePreferredLanguage);\n        $translateProvider.useSanitizeValueStrategy('escape');\n\n        /**\n         * Determine the preferred language for the user.\n         *\n         * @return string Return the language.\n         */\n        function determinePreferredLanguage() {\n            var listLang = new Array('fr');\n\n            var currentLang = navigator.language.substr(0,2);\n\n            if (listLang.indexOf(currentLang) > -1) {\n                return currentLang;\n            } else {\n                return 'fr';\n            }\n        }\n    }\n]);\n\nmainModule.config(['$mdThemingProvider',function($mdThemingProvider) {\n    $mdThemingProvider.theme('default')\n        .primaryPalette('blue')\n        .accentPalette('red')\n        .warnPalette('deep-orange')\n        .dark();\n}]);\n\nmainModule.config(['$mdIconProvider', function ($mdIconProvider) {\n    var defaultPathIcons = 'img/icons/';\n    $mdIconProvider\n        .icon('global:menu', defaultPathIcons+'menu.svg')\n        .icon('global:search', defaultPathIcons+'search.svg')\n        .icon('global:create', defaultPathIcons+'create.svg')\n        .icon('global:check', defaultPathIcons+'check.svg')\n        .icon('global:next', defaultPathIcons+'next.svg')\n        .icon('global:delete', defaultPathIcons+'delete.svg')\n        .icon('global:back', defaultPathIcons+'back.svg');\n}]);\n\nmainModule.config(['$mdDateLocaleProvider', function($mdDateLocaleProvider) {\n    $mdDateLocaleProvider.formatDate = function(date) {\n        date = new Date(date);\n\n        return date.toLocaleDateString();\n    };\n}]);\n\nmainModule.config(['storageProvider', function (storageProvider) {\n    storageProvider.addEntity(Task, function (name, db) {\n        var objectStore = db.createObjectStore(name, { keyPath: 'id', autoIncrement: true });\n    });\n    storageProvider.addEntity(TaskHistory, function (name, db) {\n        var objectStore = db.createObjectStore(name, { keyPath: 'id', autoIncrement: true });\n    });\n}]);\n\nmainModule.run(function () {\n    // Register serviceWorker\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker\n            .register('/service-worker.js')\n            .then(function() { console.log('Service Worker Registered'); });\n    }\n});\n\nexport default nameModule;","import HomepageController from 'scripts/controllers/homepage';\nimport CreateController from 'scripts/controllers/create';\nimport HistoryController from 'scripts/controllers/history';\nimport HeadController from 'scripts/controllers/head';\nimport HeaderController from 'scripts/controllers/header';\n\nvar nameModule = 'periodicTaskManager.controllers';\n\nvar controllersModule = angular.module(nameModule, []);\n\ncontrollersModule.controller('HomepageController', HomepageController);\ncontrollersModule.controller('CreateController', CreateController);\ncontrollersModule.controller('HistoryController', HistoryController);\ncontrollersModule.controller('HeadController', HeadController);\ncontrollersModule.controller('HeaderController', HeaderController);\n\nexport default nameModule;","import Task from 'scripts/entity/task';\n\nclass Create {\n    constructor($scope, $routeParams, $translate, $mdToast, headContent, headerContent, taskManager) {\n        headerContent.removeMainAction();\n\n        $scope.saveTask = function () {\n            if ($scope.taskForm.$valid) {\n                if (!$scope.task.nextDate) {\n                    var nextDate = new Date();\n                    nextDate.setDate(nextDate.getDate()+$scope.task.periodicity);\n                    $scope.task.nextDate = nextDate;\n                }\n\n                taskManager.save($scope.task).then(function (idTask) {\n                    console.log('success save. Id : '+idTask);\n                    $translate('create.task.saved').then(function (content) {\n                        var toast = $mdToast.simple().textContent(content);\n                        toast.position('top right');\n                        $mdToast.show(toast);\n                    });\n                    window.history.back();\n                });\n            }\n        };\n\n        if ($routeParams.id) {\n            // Edit mode.\n            $translate('create.title_update').then(function (title) {\n                headContent.setAdditionnalTitle(title);\n            });\n\n            taskManager.getById($routeParams.id).then(function (task) {\n                $scope.task = task;\n            });\n        } else {\n            // Create mode.\n            $translate('create.title').then(function (title) {\n                headContent.setAdditionnalTitle(title);\n            });\n\n            $scope.task = new Task();\n        }\n\n        var tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate()+1);\n        $scope.minDate = tomorrow;\n    }\n}\n\nCreate.$inject = ['$scope', '$routeParams', '$translate', '$mdToast', 'headContent', 'headerContent', 'taskManager'];\n\nexport default Create;","// Manage the <head> HTML\nclass head {\n    constructor($scope, headContent) {\n        $scope.additionnalTitle = null;\n        $scope.$on(headContent.EVENT_CHANGE_TITLE, function (event, additionnalTitle) {\n            $scope.additionnalTitle = additionnalTitle;\n        });\n    }\n}\n\nhead.$inject = ['$scope', 'headContent'];\n\nexport default head;","class Header {\n    constructor($scope, $location, $mdSidenav, headContent, headerContent) {\n        $scope.title = null;\n        $scope.mainAction = null;\n        $scope.isHome = true;\n        $scope.$on(headContent.EVENT_CHANGE_TITLE, function (event, title) {\n            $scope.title = title;\n        });\n        $scope.$on(headerContent.EVENT_CHANGE_MAIN_ACTION, function (event, mainAction) {\n            $scope.mainAction = mainAction;\n        });\n\n        $scope.openLeftMenu = function() {\n            $mdSidenav('left').toggle();\n        };\n\n        $scope.backHome = function() {\n            window.history.back();\n        };\n\n        $scope.$on('$routeChangeSuccess', function () {\n            if ($location.path() === '/') {\n                $scope.isHome = true;\n            } else {\n                $scope.isHome = false;\n            }\n        });\n    }\n}\n\nHeader.$inject = ['$scope', '$location', '$mdSidenav', 'headContent', 'headerContent'];\n\nexport default Header;","import Task from 'scripts/entity/task';\n\nclass Homepage {\n    constructor($scope, $translate, headContent, headerContent, taskManager) {\n        $scope.loadingTasksHistory = true;\n        $scope.errorLoadingTasksHistory = false;\n        $scope.tasksHistory = [];\n\n        headerContent.removeMainAction();\n\n        $translate('history.title').then(function (title) {\n            headContent.setAdditionnalTitle(title);\n        });\n\n        taskManager.getAllHistory().then(\n            function (tasksHistory) {\n                $scope.loadingTasks = false;\n                $scope.tasksHistory = tasksHistory;\n            },\n            function () {\n                $scope.loadingTasks = false;\n                $scope.errorLoadingTasks = true;\n            }\n        );\n    }\n}\n\nHomepage.$inject = ['$scope', '$translate', 'headContent', 'headerContent', 'taskManager'];\n\nexport default Homepage;","import Task from 'scripts/entity/task';\n\nclass Homepage {\n    constructor($scope, $location, $mdDialog, $translate, headContent, headerContent, taskManager) {\n        var that = this;\n        this.taskManager = taskManager;\n        $scope.loadingTasks = true;\n        $scope.errorLoadingTasks = false;\n        $scope.tasks = [];\n\n        headContent.resetTitle();\n\n        headerContent.setMainAction(function () {\n            $location.path('/create');\n        }, 'global:create');\n\n        taskManager.getAll().then(\n            function (tasks) {\n                var today = new Date();\n                for (var i = 0; i < tasks.length; i++) {\n                    tasks[i].daysBeforeNextTime = that.determineDaysBeforeNextTime(today, tasks[i].nextDate);\n                }\n\n                $scope.loadingTasks = false;\n                $scope.tasks = tasks;\n            },\n            function () {\n                $scope.loadingTasks = false;\n                $scope.errorLoadingTasks = true;\n            }\n        );\n\n        $scope.check = function (task) {\n            that.validTask(task);\n            // Save in history.\n            taskManager.addHistory(task);\n        };\n\n        $scope.report = function (task) {\n            that.validTask(task);\n        };\n\n        $scope.delete = function ($index) {\n            var task = $scope.tasks[$index];\n\n            $translate(['homepage.task.delete.dialog.title', 'homepage.task.delete.dialog.description', 'homepage.task.delete.dialog.confirm', 'homepage.task.delete.dialog.cancel'], {name: task.name}).then(function (texts) {\n                var confirm = $mdDialog.confirm()\n                    .title(texts['homepage.task.delete.dialog.title'])\n                    .textContent(texts['homepage.task.delete.dialog.description'])\n                    .ok(texts['homepage.task.delete.dialog.confirm'])\n                    .cancel(texts['homepage.task.delete.dialog.cancel']);\n                $mdDialog.show(confirm).then(function() {\n                    taskManager.delete(task.id).then(function () {\n                        $scope.tasks.splice($index, 1);\n                    });\n                });\n            });\n\n        };\n    }\n\n    validTask(task) {\n        var nextDate = new Date();\n        nextDate.setDate(nextDate.getDate()+task.periodicity);\n        task.nextDate = nextDate;\n        task.daysBeforeNextTime = this.determineDaysBeforeNextTime(new Date(), task.nextDate);\n\n        // Update BDD\n        this.taskManager.save(task);\n    }\n\n    determineDaysBeforeNextTime(today, nextDate) {\n        return Math.ceil((nextDate - today) / (24 * 60 * 60 * 1000));\n    }\n}\n\nHomepage.$inject = ['$scope', '$location', '$mdDialog', '$translate', 'headContent', 'headerContent', 'taskManager'];\n\nexport default Homepage;","class Task {\n    constructor(name) {\n        this.name = name;\n        this.nextDate = null;\n        this.periodicity = 1;\n    }\n}\n\nexport default Task;","class TaskHistory {\n    constructor(name) {\n        this.name = name;\n        this.date = new Date();\n    }\n}\n\nexport default TaskHistory;","import HeadContent from 'scripts/services/headContent';\nimport HeaderContent from 'scripts/services/headerContent';\nimport StorageProvider from 'scripts/services/storage';\nimport TaskManager from 'scripts/services/taskManager';\n\nvar nameModule = 'periodicTaskManager.services';\n\nvar servicesModule = angular.module(nameModule, []);\n\nservicesModule.service('headContent', HeadContent);\nservicesModule.service('headerContent', HeaderContent);\nservicesModule.provider('storage', StorageProvider);\nservicesModule.service('taskManager', TaskManager);\n\nexport default nameModule;","var notifyChangeMethod = Symbol('notifyChange');\n\nclass HeadContent {\n    constructor($rootScope) {\n        this.EVENT_CHANGE_TITLE = 'change_head_title';\n        this.additionnalTitle = null;\n\n        this[notifyChangeMethod] = function () {\n            $rootScope.$broadcast(this.EVENT_CHANGE_TITLE, this.additionnalTitle);\n        };\n    }\n\n    /**\n     * Reset the title on default value.\n     */\n    resetTitle() {\n        this.additionnalTitle = null;\n        this[notifyChangeMethod]();\n    }\n\n    /**\n     * Set an additionnal title.\n     *\n     * @param {string} additionnalTitle\n     */\n    setAdditionnalTitle(additionnalTitle) {\n        this.additionnalTitle = additionnalTitle;\n        this[notifyChangeMethod]();\n    }\n}\n\nHeadContent.$inject = ['$rootScope'];\n\nexport default HeadContent;","var notifyChangeMainActionMethod = Symbol('notifyChangeMainAction');\n\nclass HeaderContent {\n    constructor($rootScope) {\n        this.EVENT_CHANGE_MAIN_ACTION = 'change_main_action';\n        this.mainAction = null;\n\n        this[notifyChangeMainActionMethod] = function () {\n            $rootScope.$broadcast(this.EVENT_CHANGE_MAIN_ACTION, this.mainAction);\n        };\n    }\n\n    /**\n     * Remove the main action\n     */\n    removeMainAction() {\n        this.mainAction = null;\n        this[notifyChangeMainActionMethod]();\n    }\n\n    /**\n     * Set an main action.\n     *\n     * @param {Function} callback\n     * @param {String}   icon\n     */\n    setMainAction(callback, icon) {\n        this.mainAction = {callback: callback, icon: icon};\n        this[notifyChangeMainActionMethod]();\n    }\n}\n\nHeaderContent.$inject = ['$rootScope'];\n\nexport default HeaderContent;","var connexionSymbol = Symbol('connexion');\nvar entitiesSymbol = Symbol('entities');\n\nclass Storage {\n    constructor($q, entities) {\n        this.$q = $q;\n        this[connexionSymbol] = null;\n        this[entitiesSymbol] = entities;\n    }\n\n    getObjectStore(entity, mode) {\n        var deferred = this.$q.defer();\n        this.getConnexion().then(function (connexion) {\n            var stockageName = getStockageNameFromEntity(entity);\n            var transaction = connexion.transaction(stockageName, mode);\n\n            transaction.onerror = function(event) {\n                console.error('Transaction failed.');\n                deferred.reject(event);\n            };\n\n            var objectStore = transaction.objectStore(stockageName);\n            deferred.resolve(objectStore);\n        });\n\n        return deferred.promise;\n    }\n\n    getConnexion() {\n        var that = this;\n        var deferred = this.$q.defer();\n\n        if (this[connexionSymbol] !== null) {\n            deferred.resolve(this[connexionSymbol]);\n        } else {\n            // Start connexion\n            var connexion = window.indexedDB.open('PeriodicTaskManager', 1);\n\n            connexion.onerror = function(event) {\n                console.error('Fail to use indexedDB. Code : '+event.target.errorCode);\n                deferred.reject(event);\n            };\n\n            connexion.onsuccess = function(event) {\n                var db = event.target.result;\n\n                this[connexionSymbol] = db;\n\n                db.onerror = function(event) {\n                    console.error('Fail to request.');\n                    console.error(event);\n                    deferred.reject(event);\n                };\n\n                deferred.resolve(this[connexionSymbol]);\n            };\n\n            // Cet évènement est seulement implémenté dans des navigateurs récents\n            connexion.onupgradeneeded = function(event) {\n                var db = event.target.result;\n\n                // Config DB\n                for (var i = 0; i < that[entitiesSymbol].length; i++) {\n                    that[entitiesSymbol][i].initDb(getStockageNameFromEntity(that[entitiesSymbol][i].entity), db);\n                }\n            };\n        }\n\n        return deferred.promise;\n    }\n}\n\nfunction getStockageNameFromEntity(entity) {\n    return entity.name.toLowerCase();\n}\n\nclass StorageProvider {\n    constructor() {\n        this.entities = [];\n\n        this.$get = [\n            '$q',\n            function($q) {\n                return new Storage($q, this.entities);\n            }\n        ];\n    }\n\n    addEntity(entity, initDb) {\n        this.entities.push({entity: entity, initDb: initDb});\n    }\n}\n\nexport default StorageProvider;","import Task from 'scripts/entity/task';\nimport TaskHistory from 'scripts/entity/taskHistory';\n\nvar notifyChangeMainActionMethod = Symbol('notifyChangeMainAction');\n\nclass TaskManager {\n    constructor($q, storage) {\n        this.$q = $q;\n        this.storage = storage;\n    }\n\n    save(task) {\n        var deferred = this.$q.defer();\n\n        var taskStore = this.storage.getObjectStore(Task, 'readwrite');\n        taskStore.then(function (objectStore) {\n            var putRequest = objectStore.put(task);\n            putRequest.onsuccess = function (event) {\n                deferred.resolve(event.target.result);\n            };\n            putRequest.onerror = function (event) {\n                deferred.reject(event);\n                console.error('Error to save the task');\n                console.error(task);\n            };\n        });\n\n        return deferred.promise;\n    }\n\n    getById(id) {\n        var deferred = this.$q.defer();\n        id = parseInt(id);\n\n        var taskStore = this.storage.getObjectStore(Task, 'readonly');\n        taskStore.then(function (objectStore) {\n            var getRequest = objectStore.get(id);\n            getRequest.onsuccess = function () {\n                deferred.resolve(getRequest.result);\n            };\n            getRequest.onerror = function (event) {\n                deferred.reject(event);\n                console.error('Error to get the task: '+id);\n                console.error(task);\n            };\n        }, function () {\n            console.error('Fail to open transaction.');\n            deferred.reject();\n        });\n\n        return deferred.promise;\n    }\n\n    getAll() {\n        var deferred = this.$q.defer();\n\n        var taskStore = this.storage.getObjectStore(Task, 'readonly');\n        taskStore.then(function (objectStore) {\n            var tasks = [];\n            objectStore.openCursor().onsuccess = function(event) {\n                var cursor = event.target.result;\n                if (cursor) {\n                    tasks.push(cursor.value);\n                    cursor.continue();\n                } else {\n                    deferred.resolve(tasks);\n                }\n            };\n        }, function () {\n            console.error('Fail to open transaction.');\n            deferred.reject();\n        });\n\n        return deferred.promise;\n    }\n\n    delete(id) {\n        var deferred = this.$q.defer();\n\n        var taskStore = this.storage.getObjectStore(Task, 'readwrite');\n        taskStore.then(function (objectStore) {\n            var deleteRequest = objectStore.delete(id);\n            deleteRequest.onsuccess = function () {\n                deferred.resolve(deleteRequest.result);\n            };\n            deleteRequest.onerror = function (event) {\n                deferred.reject(event);\n                console.error('Error to delete the task: '+id);\n            };\n        }, function () {\n            console.error('Fail to open transaction.');\n            deferred.reject();\n        });\n\n        return deferred.promise;\n    }\n\n    addHistory(task) {\n        var deferred = this.$q.defer();\n\n        var taskHistory = new TaskHistory(task.name);\n\n        var taskHistoryStore = this.storage.getObjectStore(TaskHistory, 'readwrite');\n        taskHistoryStore.then(function (objectStore) {\n            var addRequest = objectStore.add(taskHistory);\n            addRequest.onsuccess = function () {\n                deferred.resolve(addRequest.result);\n            };\n            addRequest.onerror = function (event) {\n                deferred.reject(event);\n                console.error('Error to add the task history');\n            };\n        }, function () {\n            console.error('Fail to open transaction.');\n            deferred.reject();\n        });\n\n        return deferred.promise;\n    }\n\n    getAllHistory() {\n        var deferred = this.$q.defer();\n\n        var taskHistoryStore = this.storage.getObjectStore(TaskHistory, 'readonly');\n        taskHistoryStore.then(function (objectStore) {\n            var tasksHistory = [];\n            objectStore.openCursor().onsuccess = function(event) {\n                var cursor = event.target.result;\n                if (cursor) {\n                    tasksHistory.push(cursor.value);\n                    cursor.continue();\n                } else {\n                    deferred.resolve(tasksHistory);\n                }\n            };\n        }, function () {\n            console.error('Fail to open transaction.');\n            deferred.reject();\n        });\n\n        return deferred.promise;\n    }\n}\n\n\nTaskManager.$inject = ['$q', 'storage'];\n\nexport default TaskManager;"]}